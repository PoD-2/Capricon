{"ast":null,"code":"import { sellerOrderConstants } from '../constants';\nimport { alertActions } from '.';\nimport { sellerOrderService } from '../../services';\nexport const sellerOrderActions = {\n  viewOrderHistory,\n  viewOrderStatus,\n  changeOrderStatus\n};\n\nfunction viewOrderHistory(sellerId) {\n  return dispatch => {\n    dispatch(request());\n    return sellerOrderService.viewOrderHistory(sellerId).then(orders => {\n      dispatch(success(orders));\n    }, error => {\n      dispatch(failure());\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: sellerOrderConstants.VIEW_REQUEST\n    };\n  }\n\n  function success(orders) {\n    return {\n      type: sellerOrderConstants.VIEW_SUCCESS,\n      orders\n    };\n  }\n\n  function failure() {\n    return {\n      type: sellerOrderConstants.VIEW_FAILURE\n    };\n  }\n}\n\nfunction viewOrderStatus(sellerId) {\n  return dispatch => {\n    dispatch(request());\n    sellerOrderService.viewOrderStatus(sellerId).then(orderStatus => {\n      dispatch(success(orderStatus));\n    }, error => {\n      dispatch(failure());\n      dispatch(alertActions.error(error.message.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: sellerOrderConstants.VIEW_STATUS_REQUEST\n    };\n  }\n\n  function success(orderStatus) {\n    return {\n      type: sellerOrderConstants.VIEW_STATUS_SUCCESS,\n      orderStatus\n    };\n  }\n\n  function failure() {\n    return {\n      type: sellerOrderConstants.VIEW_STATUS_FAILURE\n    };\n  }\n}\n\nfunction changeOrderStatus(bookId, sellerId, changeStatus) {\n  return dispatch => {\n    dispatch(request());\n    sellerOrderService.changeOrderStatus(bookId, sellerId, changeStatus).then(response => {\n      dispatch(success(response));\n      dispatch(alertActions.success(\"Delivery Status Changed successfully\"));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: sellerOrderConstants.CHANGE_REQUEST\n    };\n  }\n\n  function success(orderStatus) {\n    return {\n      type: sellerOrderConstants.CHANGE_SUCCESS,\n      orderStatus\n    };\n  }\n\n  function failure() {\n    return {\n      type: sellerOrderConstants.CHANGE_FAILURE\n    };\n  }\n}","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/redux/actions/seller.order.actions.js"],"names":["sellerOrderConstants","alertActions","sellerOrderService","sellerOrderActions","viewOrderHistory","viewOrderStatus","changeOrderStatus","sellerId","dispatch","request","then","orders","success","error","failure","toString","type","VIEW_REQUEST","VIEW_SUCCESS","VIEW_FAILURE","orderStatus","message","VIEW_STATUS_REQUEST","VIEW_STATUS_SUCCESS","VIEW_STATUS_FAILURE","bookId","changeStatus","response","CHANGE_REQUEST","CHANGE_SUCCESS","CHANGE_FAILURE"],"mappings":"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","sourcesContent":["import { sellerOrderConstants } from '../constants';\nimport { alertActions } from '.';\nimport { sellerOrderService } from '../../services';\n\nexport const sellerOrderActions = {\n    viewOrderHistory,\n    viewOrderStatus,\n    changeOrderStatus\n   \n};\n\nfunction viewOrderHistory(sellerId) {\n    return dispatch => {\n\n        dispatch(request());\n\n        return sellerOrderService.viewOrderHistory(sellerId)\n            .then(\n                orders => {\n                    dispatch(success(orders));\n                },\n                error => {\n                    dispatch(failure());\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: sellerOrderConstants.VIEW_REQUEST } }\n    function success(orders) { return { type: sellerOrderConstants.VIEW_SUCCESS, orders } }\n    function failure() { return { type: sellerOrderConstants.VIEW_FAILURE } }\n}\n\nfunction viewOrderStatus(sellerId) {\n    return dispatch => {\n\n        dispatch(request());\n\n        sellerOrderService.viewOrderStatus(sellerId)\n            .then(\n                orderStatus => {\n                    dispatch(success(orderStatus));\n                },\n                error => {\n                    dispatch(failure());\n                    dispatch(alertActions.error(error.message.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: sellerOrderConstants.VIEW_STATUS_REQUEST } }\n    function success(orderStatus) { return { type: sellerOrderConstants.VIEW_STATUS_SUCCESS, orderStatus } }\n    function failure() { return { type: sellerOrderConstants.VIEW_STATUS_FAILURE } }\n}\n\n\nfunction changeOrderStatus(bookId, sellerId, changeStatus) {\n    return dispatch => {\n\n        dispatch(request());\n\n        sellerOrderService.changeOrderStatus(bookId,sellerId, changeStatus)\n            .then(\n                response => {\n                    dispatch(success(response));\n                    dispatch(alertActions.success(\"Delivery Status Changed successfully\"));\n                },\n                error => {\n\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: sellerOrderConstants.CHANGE_REQUEST } }\n    function success(orderStatus) { return { type: sellerOrderConstants.CHANGE_SUCCESS, orderStatus} }\n    function failure() { return { type: sellerOrderConstants.CHANGE_FAILURE } }\n}"]},"metadata":{},"sourceType":"module"}