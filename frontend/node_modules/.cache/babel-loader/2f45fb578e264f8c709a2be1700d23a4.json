{"ast":null,"code":"import { userConstants } from '../constants';\nimport { userService } from '../../services/';\nimport { alertActions } from './';\nimport { history } from '../../helpers/history';\nexport const userActions = {\n  login,\n  logout,\n  register\n};\n\nfunction login(user, remember) {\n  return dispatch => {\n    dispatch(request());\n    userService.login(user, remember).then(user => {\n      dispatch(success(user));\n      history.push('/');\n    }, error => {\n      console.log(\"error\" + error);\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user, remember) {\n  return dispatch => {\n    dispatch(request());\n    userService.register(user, remember).then(user => {\n      dispatch(success(user));\n      history.push('/');\n    }, error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/redux/actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","userActions","login","logout","register","user","remember","dispatch","request","then","success","push","error","console","log","failure","toString","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,MAFuB;AAGvBC,EAAAA;AAHuB,CAApB;;AAMP,SAASF,KAAT,CAAeG,IAAf,EAAqBC,QAArB,EAA+B;AAC3B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAV,IAAAA,WAAW,CAACI,KAAZ,CAAkBG,IAAlB,EAAwBC,QAAxB,EACKG,IADL,CAEQJ,IAAI,IAAI;AACAE,MAAAA,QAAQ,CAACG,OAAO,CAACL,IAAD,CAAR,CAAR;AACAL,MAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AAEP,KANT,EAOQC,KAAK,IAAI;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,KAAtB;AACAL,MAAAA,QAAQ,CAACQ,OAAO,CAACH,KAAK,CAACI,QAAN,EAAD,CAAR,CAAR;AACAT,MAAAA,QAAQ,CAACR,YAAY,CAACa,KAAb,CAAmBA,KAAK,CAACI,QAAN,EAAnB,CAAD,CAAR;AACH,KAXT;AAaH,GAhBD;;AAkBA,WAASR,OAAT,CAAiBH,IAAjB,EAAuB;AAAE,WAAO;AAAEY,MAAAA,IAAI,EAAEpB,aAAa,CAACqB,aAAtB;AAAqCb,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASK,OAAT,CAAiBL,IAAjB,EAAuB;AAAE,WAAO;AAAEY,MAAAA,IAAI,EAAEpB,aAAa,CAACsB,aAAtB;AAAqCd,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASU,OAAT,CAAiBH,KAAjB,EAAwB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEpB,aAAa,CAACuB,aAAtB;AAAqCR,MAAAA;AAArC,KAAP;AAAqD;AAClF;;AAED,SAAST,MAAT,GAAkB;AACdL,EAAAA,WAAW,CAACK,MAAZ;AACA,SAAO;AAAEc,IAAAA,IAAI,EAAEpB,aAAa,CAACwB;AAAtB,GAAP;AACH;;AAED,SAASjB,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;AAC9B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAV,IAAAA,WAAW,CAACM,QAAZ,CAAqBC,IAArB,EAA0BC,QAA1B,EACKG,IADL,CAEQJ,IAAI,IAAI;AACJE,MAAAA,QAAQ,CAACG,OAAO,CAACL,IAAD,CAAR,CAAR;AACAL,MAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AAEH,KANT,EAOQC,KAAK,IAAI;AACLL,MAAAA,QAAQ,CAACQ,OAAO,CAACH,KAAD,CAAR,CAAR;AACAL,MAAAA,QAAQ,CAACR,YAAY,CAACa,KAAb,CAAmBA,KAAnB,CAAD,CAAR;AACH,KAVT;AAYH,GAfD;;AAiBA,WAASJ,OAAT,CAAiBH,IAAjB,EAAuB;AAAE,WAAO;AAAEY,MAAAA,IAAI,EAAEpB,aAAa,CAACyB,gBAAtB;AAAwCjB,MAAAA;AAAxC,KAAP;AAAuD;;AAChF,WAASK,OAAT,CAAiBL,IAAjB,EAAuB;AAAE,WAAO;AAAEY,MAAAA,IAAI,EAAEpB,aAAa,CAAC0B,gBAAtB;AAAwClB,MAAAA;AAAxC,KAAP;AAAuD;;AAChF,WAASU,OAAT,CAAiBH,KAAjB,EAAwB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEpB,aAAa,CAAC2B,gBAAtB;AAAwCZ,MAAAA;AAAxC,KAAP;AAAwD;AACrF","sourcesContent":["import { userConstants } from '../constants';\nimport { userService } from '../../services/';\nimport { alertActions } from './';\nimport { history } from '../../helpers/history';\n\nexport const userActions = {\n    login,\n    logout,\n    register\n};\n\nfunction login(user, remember) {\n    return dispatch => {\n        dispatch(request()); \n\n        userService.login(user, remember)\n            .then(\n                user => { \n                        dispatch(success(user));\n                        history.push('/');\n                   \n                },\n                error => {\n                    console.log(\"error\" + error);\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user, remember) {\n    return dispatch => {\n        dispatch(request());\n\n        userService.register(user,remember)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n\n                },\n                error => {\n                    dispatch(failure(error));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n"]},"metadata":{},"sourceType":"module"}