{"ast":null,"code":"var _jsxFileName = \"/Users/santhosh/myFiles/Capricon/src/Routes/Route.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  alwaysPublic,\n  ...rest\n}) {\n  _s();\n\n  const user = useSelector(state => state.authentication.user);\n  const signed = user ? true : false; //Route is private and the user is not logged in\n\n  if (isPrivate && !signed) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!alwaysPublic && !isPrivate && signed) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    component: Component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}\n\n_s(RouteWrapper, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = RouteWrapper;\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  alwaysPublic: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n  alwaysPublic: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteWrapper\");","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/Routes/Route.js"],"names":["React","Route","Redirect","PropTypes","useSelector","RouteWrapper","component","Component","isPrivate","alwaysPublic","rest","user","state","authentication","signed","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA,YAAlC;AAAgD,KAAGC;AAAnD,CAAtB,EAAgF;AAAA;;AAG3F,QAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,IAA/B,CAAxB;AAEA,QAAMG,MAAM,GAAGH,IAAI,GAAG,IAAH,GAAU,KAA7B,CAL2F,CAO3F;;AACA,MAAGH,SAAS,IAAI,CAACM,MAAjB,EAAwB;AACpB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAG,CAACL,YAAD,IAAiB,CAACD,SAAlB,IAA+BM,MAAlC,EAAyC;AACrC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAAO,QAAC,KAAD,OAAWJ,IAAX;AAAiB,IAAA,SAAS,EAAEH;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAjBuBF,Y;UAGPD,W;;;KAHOC,Y;AAmBxBA,YAAY,CAACU,SAAb,GAAyB;AACrBP,EAAAA,SAAS,EAAEL,SAAS,CAACa,IADA;AAErBP,EAAAA,YAAY,EAAEN,SAAS,CAACa,IAFH;AAGrBV,EAAAA,SAAS,EAAEH,SAAS,CAACc,SAAV,CAAoB,CAACd,SAAS,CAACe,OAAX,EAAoBf,SAAS,CAACgB,IAA9B,CAApB,EAAyDC;AAH/C,CAAzB;AAMAf,YAAY,CAACgB,YAAb,GAA2B;AACvBb,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,YAAY,EAAE;AAFS,CAA3B","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { useSelector } from 'react-redux';\n\nexport default function RouteWrapper({component: Component, isPrivate, alwaysPublic, ...rest}) {\n    \n    \n    const user = useSelector(state => state.authentication.user);\n\n    const signed = user ? true : false;\n\n    //Route is private and the user is not logged in\n    if(isPrivate && !signed){\n        return <Redirect to=\"/Login\" />;\n    }\n\n    if(!alwaysPublic && !isPrivate && signed){\n        return <Redirect to=\"/\" />;\n    }\n\n    return <Route {...rest} component={Component} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    alwaysPublic: PropTypes.bool,\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nRouteWrapper.defaultProps ={\n    isPrivate: false,\n    alwaysPublic: false\n};\n\n\n"]},"metadata":{},"sourceType":"module"}