{"ast":null,"code":"var _jsxFileName = \"/Users/santhosh/myFiles/Capricon/src/pages/Login/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Alert } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport Logo from '../../images/capcricon.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../redux/actions';\nimport { formValidation as validate } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [rememberChecked, setRememberChecked] = useState(false); //redux integration\n\n  const loggingIn = useSelector(state => state.authentication.loading);\n  const dispatch = useDispatch(); //FORM VALIDATION:\n  // if form is valid on submit, this function return true, else false\n\n  function validatePassword() {\n    return validate.passwordValidation(submitted, password);\n  }\n\n  function validateEmail() {\n    return validate.emailValidation(submitted, email);\n  } //check if remember checkbox is clicked\n\n\n  const checkBoxClicked = e => {\n    let isChecked = e.target.checked;\n    setRememberChecked(isChecked);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true); //dispatch only if input fields have value and also password is 8 charachters min\n\n    if (email && password && validatePassword()) {\n      dispatch(userActions.login(email, password, rememberChecked));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          width: \"200\",\n          height: \"120\",\n          className: \"image\",\n          alt: \"capricon logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-normal text-center mt-5\",\n      style: {\n        fontSize: 32\n      },\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"email\",\n            value: email,\n            placeholder: \"mail@company.com\",\n            className: 'form-control' + (!validateEmail() && ' is-invalid'),\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), !validateEmail() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: \"Email is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"enter password\",\n            className: 'form-control' + (!validatePassword() && ' is-invalid'),\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), !validatePassword() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: \"password minimum 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicCheckbox\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              onChange: e => checkBoxClicked(e),\n              type: \"checkbox\",\n              label: \"Remember me\",\n              checked: rememberChecked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            className: \"pb-4 m-0\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          size: \"lg\",\n          type: \"submit\",\n          children: [loggingIn && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-grow spinner-grow-sm mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 27\n          }, this), \"Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-normal mt-5 mb-2\",\n        style: {\n          fontSize: 22\n        },\n        children: \"New to capricon?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        href: \"/register\",\n        block: true,\n        size: \"lg\",\n        variant: \"outline-dark\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginPage, \"q72gRou5VHxkTQA8EoLhYvGfV7Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/pages/Login/LoginPage.js"],"names":["React","useState","Button","Form","Alert","Logo","useDispatch","useSelector","userActions","formValidation","validate","LoginPage","email","setEmail","password","setPassword","submitted","setSubmitted","rememberChecked","setRememberChecked","loggingIn","state","authentication","loading","dispatch","validatePassword","passwordValidation","validateEmail","emailValidation","checkBoxClicked","e","isChecked","target","checked","handleSubmit","event","preventDefault","login","fontSize","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Alert } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport Logo from '../../images/capcricon.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../redux/actions';\nimport { formValidation as validate } from '../../services';\nexport default function LoginPage() {\n  \n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [rememberChecked, setRememberChecked] = useState(false);\n\n  //redux integration\n  const loggingIn = useSelector(state => state.authentication.loading);\n  const dispatch = useDispatch();\n  \n  \n  //FORM VALIDATION:\n\n  // if form is valid on submit, this function return true, else false\n  function validatePassword() {\n    return validate.passwordValidation(submitted, password);\n  }\n\n  function validateEmail() {\n    return validate.emailValidation(submitted, email);\n  }\n\n\n  //check if remember checkbox is clicked\n  const checkBoxClicked = (e) => {\n    let isChecked = e.target.checked;\n    setRememberChecked(isChecked);\n  }\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true);\n\n    //dispatch only if input fields have value and also password is 8 charachters min\n    if (email && password && validatePassword()) {\n      dispatch(userActions.login(email, password, rememberChecked));\n    }\n  }\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-center mt-5\">\n        <a href=\"/\"><img\n          src={Logo}\n          width=\"200\"\n          height=\"120\"\n          className=\"image\"\n          alt=\"capricon logo\"\n        /></a>\n      </div>\n      <p className=\"font-weight-normal text-center mt-5\" style={{ fontSize: 32 }}>Log In</p>\n      <div className=\"Login\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Group size=\"lg\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"email\"\n              value={email}\n              placeholder=\"mail@company.com\"\n              className={'form-control' + (!validateEmail() && ' is-invalid')}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {!validateEmail() &&\n              <div className=\"invalid-feedback\">Email is required</div>\n            }\n\n          </Form.Group>\n          <Form.Group size=\"lg\" controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"enter password\"\n              className={'form-control' + (!validatePassword() && ' is-invalid')}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {!validatePassword() &&\n              <div className=\"invalid-feedback\">password minimum 8 characters</div>\n            }\n\n          </Form.Group>\n          <div className=\"d-flex justify-content-between align-items-center flex-row\">\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check onChange={e => checkBoxClicked(e)} type=\"checkbox\" label=\"Remember me\" checked={rememberChecked} />\n          </Form.Group>\n          <Button variant=\"link\" className=\"pb-4 m-0\" >Forgot password?</Button>\n          </div>\n          <Button block size=\"lg\" type=\"submit\">\n            {loggingIn && <span className=\"spinner-grow spinner-grow-sm mr-1\"></span>}\n          Login\n        </Button>\n        </Form>\n        <p className=\"font-weight-normal mt-5 mb-2\" style={{ fontSize: 22 }}>New to capricon?</p>\n        <Button href=\"/register\" block size=\"lg\" variant=\"outline-dark\">\n          Sign Up\n      </Button>\n      </div>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}