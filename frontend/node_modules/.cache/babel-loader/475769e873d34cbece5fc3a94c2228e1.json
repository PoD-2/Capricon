{"ast":null,"code":"var _jsxFileName = \"/Users/santhosh/myFiles/Capricon/src/Routes/Route.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  alwaysPublic,\n  isSeller,\n  isSellerPrivate,\n  ...rest\n}) {\n  _s();\n\n  const user = useSelector(state => state.userAuth.user);\n  const seller = useSelector(state => state.sellerAuth.seller);\n  const signed = user ? true : false;\n  const sellerSigned = seller ? true : false; //Route is private and the user is not logged in\n\n  if (isPrivate && !signed) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!alwaysPublic && !isPrivate && signed && !isSeller && !isSellerPrivate) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  } //seller url will be opened only when normal account is logged in\n\n\n  if ((isSeller || isSellerPrivate) && !signed) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  } //if seller is logged in, it will redirect to dashboard when seller tries to access seller login or dashboard\n\n\n  if (isSeller && signed && sellerSigned) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/seller/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (isSellerPrivate && signed && !sellerSigned) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/seller/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    component: Component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n\n_s(RouteWrapper, \"d8oj2/zkxSBTsyRHwoi8V0hs/LY=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = RouteWrapper;\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  alwaysPublic: PropTypes.bool,\n  isSeller: PropTypes.bool,\n  isSellerPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n  alwaysPublic: false,\n  isSeller: false,\n  isSellerPrivate: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteWrapper\");","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/Routes/Route.js"],"names":["React","Route","Redirect","PropTypes","useSelector","RouteWrapper","component","Component","isPrivate","alwaysPublic","isSeller","isSellerPrivate","rest","user","state","userAuth","seller","sellerAuth","signed","sellerSigned","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA,YAAlC;AAAgDC,EAAAA,QAAhD;AAA0DC,EAAAA,eAA1D;AAA2E,KAAGC;AAA9E,CAAtB,EAA2G;AAAA;;AAGtH,QAAMC,IAAI,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeF,IAAzB,CAAxB;AACA,QAAMG,MAAM,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,UAAN,CAAiBD,MAA3B,CAA1B;AAEA,QAAME,MAAM,GAAGL,IAAI,GAAG,IAAH,GAAU,KAA7B;AACA,QAAMM,YAAY,GAAGH,MAAM,GAAG,IAAH,GAAU,KAArC,CAPsH,CAStH;;AACA,MAAGR,SAAS,IAAI,CAACU,MAAjB,EAAwB;AACpB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAG,CAACT,YAAD,IAAiB,CAACD,SAAlB,IAA+BU,MAA/B,IAAyC,CAACR,QAA1C,IAAsD,CAACC,eAA1D,EAA0E;AACtE,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAhBqH,CAkBtH;;;AACA,MAAG,CAACD,QAAQ,IAAIC,eAAb,KAAiC,CAACO,MAArC,EAA4C;AACxC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GArBqH,CAuBtH;;;AACA,MAAGR,QAAQ,IAAIQ,MAAZ,IAAsBC,YAAzB,EAAsC;AACjC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACJ;;AAED,MAAGR,eAAe,IAAIO,MAAnB,IAA6B,CAACC,YAAjC,EAA8C;AACtC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAGR,sBAAO,QAAC,KAAD,OAAWP,IAAX;AAAiB,IAAA,SAAS,EAAEL;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAlCuBF,Y;UAGPD,W,EACEA,W;;;KAJKC,Y;AAoCxBA,YAAY,CAACe,SAAb,GAAyB;AACrBZ,EAAAA,SAAS,EAAEL,SAAS,CAACkB,IADA;AAErBZ,EAAAA,YAAY,EAAEN,SAAS,CAACkB,IAFH;AAGrBX,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,IAHC;AAIrBV,EAAAA,eAAe,EAAER,SAAS,CAACkB,IAJN;AAKrBf,EAAAA,SAAS,EAAEH,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACoB,OAAX,EAAoBpB,SAAS,CAACqB,IAA9B,CAApB,EAAyDC;AAL/C,CAAzB;AAQApB,YAAY,CAACqB,YAAb,GAA2B;AACvBlB,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,YAAY,EAAE,KAFS;AAGvBC,EAAAA,QAAQ,EAAE,KAHa;AAIvBC,EAAAA,eAAe,EAAE;AAJM,CAA3B","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { useSelector } from 'react-redux';\n\nexport default function RouteWrapper({component: Component, isPrivate, alwaysPublic, isSeller, isSellerPrivate, ...rest}) {\n    \n    \n    const user = useSelector(state => state.userAuth.user);\n    const seller = useSelector(state => state.sellerAuth.seller);\n\n    const signed = user ? true : false;\n    const sellerSigned = seller ? true : false;\n\n    //Route is private and the user is not logged in\n    if(isPrivate && !signed){\n        return <Redirect to=\"/Login\" />;\n    }\n    \n    if(!alwaysPublic && !isPrivate && signed && !isSeller && !isSellerPrivate){\n        return <Redirect to=\"/\" />;\n    }\n    \n    //seller url will be opened only when normal account is logged in\n    if((isSeller || isSellerPrivate) && !signed){\n        return <Redirect to=\"/login\" />;\n    }\n    \n    //if seller is logged in, it will redirect to dashboard when seller tries to access seller login or dashboard\n    if(isSeller && signed && sellerSigned){\n         return <Redirect to=\"/seller/dashboard\" />;\n    }\n\n    if(isSellerPrivate && signed && !sellerSigned){\n            return <Redirect to=\"/seller/login\" />;\n           }\n\n\n    return <Route {...rest} component={Component} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    alwaysPublic: PropTypes.bool,\n    isSeller: PropTypes.bool,\n    isSellerPrivate: PropTypes.bool,\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nRouteWrapper.defaultProps ={\n    isPrivate: false,\n    alwaysPublic: false,\n    isSeller: false,\n    isSellerPrivate: false\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}