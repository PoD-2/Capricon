{"ast":null,"code":"var _jsxFileName = \"/Users/santhosh/myFiles/Capricon/src/pages/SellerProducts/SellerProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport SellerProductCard from '../../components/SellerProductCard';\nimport ProductUpload from '../../components/ProductUpload';\nimport { sellerProductActions } from '../../redux/actions/seller.product.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingScreen from '../../components/LoadingScreen';\nimport MessageCard from '../../components/MessageCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SellerProducts() {\n  _s();\n\n  const [showModal, setShowModel] = useState(false);\n  const dispatch = useDispatch();\n  const sellerId = useSelector(state => state.sellerAuth.seller.sellerId);\n  const products = useSelector(state => state.sellerProducts.products);\n  const loading = useSelector(state => state.sellerProducts.loading);\n  useEffect(() => {\n    dispatch(sellerProductActions.view(sellerId));\n  }, [dispatch, sellerId]);\n\n  const closeModal = () => {\n    setShowModel(false);\n  };\n\n  const handleQtyChange = (productId, qtyChangle) => {\n    dispatch(sellerProductActions.changeQuantity(productId, qtyChangle, sellerId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"sellerPageTitle\",\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            onClick: () => setShowModel(true),\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"LineSeperator mb-3 mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProductUpload, {\n        showModal: showModal,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: products && products.length !== 0 ? products.map(item => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(SellerProductCard, {\n              productId: item.productId,\n              productName: item.productName,\n              descr: item.descr,\n              price: item.price,\n              quantity: item.qty,\n              images: item.images,\n              handleQtyChange: handleQtyChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)) : /*#__PURE__*/_jsxDEV(MessageCard, {\n            message: \"No products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(SellerProducts, \"IUUUcYfY2st83nY7ZYlVqTWhUG8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = SellerProducts;\nexport default SellerProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerProducts\");","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/pages/SellerProducts/SellerProducts.js"],"names":["React","useState","useEffect","Row","Col","Button","SellerProductCard","ProductUpload","sellerProductActions","useDispatch","useSelector","LoadingScreen","MessageCard","SellerProducts","showModal","setShowModel","dispatch","sellerId","state","sellerAuth","seller","products","sellerProducts","loading","view","closeModal","handleQtyChange","productId","qtyChangle","changeQuantity","length","map","item","productName","descr","price","qty","images"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport SellerProductCard from '../../components/SellerProductCard'\nimport ProductUpload from '../../components/ProductUpload';\nimport { sellerProductActions } from '../../redux/actions/seller.product.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingScreen from '../../components/LoadingScreen';\nimport MessageCard from '../../components/MessageCard';\n\nfunction SellerProducts() {\n\n    const [showModal, setShowModel] = useState(false);\n    const dispatch = useDispatch();\n    const sellerId = useSelector(state => state.sellerAuth.seller.sellerId);\n    const products = useSelector(state => state.sellerProducts.products);\n    const loading = useSelector(state => state.sellerProducts.loading);\n   \n\n    useEffect(() => {\n        dispatch(sellerProductActions.view(sellerId));\n    }, [dispatch, sellerId]);\n\n\n    const closeModal = () => {\n        setShowModel(false);\n    }\n\n  \n\n    const handleQtyChange = (productId, qtyChangle) => {\n       dispatch(sellerProductActions.changeQuantity(productId, qtyChangle, sellerId));\n    }\n\n    return (\n        <>\n        {loading ? (\n           <LoadingScreen />\n        ) : (\n        <div>\n            <Row>\n                <Col>\n                    <h3 className=\"sellerPageTitle\">Products</h3>\n                </Col>\n                <Col className=\"text-right\">\n                    <Button variant=\"info\" onClick={() => setShowModel(true)}>Add Product</Button>\n                </Col>\n            </Row>\n\n            <span className=\"LineSeperator mb-3 mt-2\" />\n            <ProductUpload\n                showModal={showModal}\n                closeModal={closeModal}\n            />\n            <div>\n                <Row>\n                {products && products.length !== 0 ? (\n                    products.map((item) => (\n                        <Col>\n                            <SellerProductCard \n                            productId={item.productId}\n                            productName={item.productName}\n                            descr={item.descr}\n                            price={item.price}\n                            quantity={item.qty}\n                            images={item.images}\n                            handleQtyChange={handleQtyChange}\n                            />\n                            </Col>\n                        ))\n                    ) : (\n                        <MessageCard message=\"No products\" />\n                    )}\n                </Row>\n            </div>\n\n        </div>\n        )}\n        </>\n    )\n}\n\nexport default SellerProducts\n"]},"metadata":{},"sourceType":"module"}