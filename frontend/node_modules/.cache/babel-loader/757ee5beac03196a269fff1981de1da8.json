{"ast":null,"code":"var _jsxFileName = \"/Users/santhosh/myFiles/Capricon/src/pages/SellerRegister/SellerRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Alert, Col } from \"react-bootstrap\";\nimport \"./SellerRegister.css\";\nimport Logo from '../../images/capcricon.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sellerActions, alertActions } from '../../redux/actions';\nimport { formValidation as validate } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SellerRegister() {\n  _s();\n\n  //redux integration\n  const loggingIn = useSelector(state => state.sellerAuth.loading);\n  const user = useSelector(state => state.userAuth.user);\n  const message = useSelector(state => state.alert.message);\n  const alertType = useSelector(state => state.alert.type);\n  const dispatch = useDispatch(); //state of this page\n\n  const [sellerName, setSellerName] = useState(user ? user.userName : \"\");\n  const [companyName, setCompanyName] = useState(user ? validate.checkForCompanyName(user.emailId) : \"\");\n  const [companyEmail, setCompanyEmail] = useState(user ? user.emailId : \"\");\n  const [csEmail, setCsEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(user ? user.phoneNumber : \"\");\n  const [csPhoneNumber, setCsPhoneNumber] = useState(\"\");\n  const [address, setAddress] = useState(user ? user.address : \"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [rememberChecked, setRememberChecked] = useState(false); //FORM VALIDATION:\n  // if form is valid on submit, this function return true, else false\n\n  function validatePassword() {\n    return validate.passwordValidation(submitted, password);\n  }\n\n  function validateEmail() {\n    return validate.emailValidation(submitted, companyEmail);\n  }\n\n  function nameValidation() {\n    return validate.nameValidation(submitted, sellerName);\n  } //check if remember checkbox is clicked\n\n\n  const checkBoxClicked = e => {\n    let isChecked = e.target.checked;\n    setRememberChecked(isChecked);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true); //dispatch only if input fields have value and also password is 8 charachters min\n\n    if (companyEmail && password && validatePassword()) {\n      const seller = {\n        \"emailId\": companyEmail,\n        \"password\": password\n      };\n      dispatch(sellerActions.login(seller, rememberChecked));\n    }\n  } //clear the alert\n\n\n  useEffect(() => {\n    setTimeout(function () {\n      // clear alert after 3 secomds\n      dispatch(alertActions.clear());\n    }, 3000);\n  }, [alertType, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [message && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType === \"alert-success\" ? \"success\" : \"danger\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          width: \"200\",\n          height: \"120\",\n          className: \"image\",\n          alt: \"capricon logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-bold text-center mt-4 mb-0\",\n      style: {\n        fontSize: 32\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-muted text-monospace mb-5\",\n        style: {\n          fontSize: 22\n        },\n        children: \"Become a Seller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Seller Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"text\",\n              value: sellerName,\n              placeholder: \"Your name\",\n              className: 'form-control' + (!nameValidation() && ' is-invalid'),\n              onChange: e => setSellerName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), !nameValidation() && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Email is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Company Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: companyEmail,\n              placeholder: \"mail@company.com\",\n              className: 'form-control' + (!validateEmail() && ' is-invalid'),\n              onChange: e => setCompanyEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), !validateEmail() && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Email is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"enter password\",\n            className: 'form-control' + (!validatePassword() && ' is-invalid'),\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), !validatePassword() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: \"password minimum 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicCheckbox\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              onChange: e => checkBoxClicked(e),\n              type: \"checkbox\",\n              label: \"Remember me\",\n              checked: rememberChecked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            className: \"pb-4 m-0\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          size: \"lg\",\n          type: \"submit\",\n          children: [loggingIn && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-grow spinner-grow-sm mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 39\n          }, this), \"Register as a Seller\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-normal mt-5 mb-2\",\n        style: {\n          fontSize: 22\n        },\n        children: \"Already a seller at capricon?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        href: \"/seller/login\",\n        block: true,\n        size: \"lg\",\n        variant: \"outline-dark\",\n        children: \"Login as a Seller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SellerRegister, \"8bvAOAbmKW6Syh3gGq89EX03wnk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = SellerRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerRegister\");","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/pages/SellerRegister/SellerRegister.js"],"names":["React","useState","useEffect","Button","Form","Alert","Col","Logo","useDispatch","useSelector","sellerActions","alertActions","formValidation","validate","SellerRegister","loggingIn","state","sellerAuth","loading","user","userAuth","message","alert","alertType","type","dispatch","sellerName","setSellerName","userName","companyName","setCompanyName","checkForCompanyName","emailId","companyEmail","setCompanyEmail","csEmail","setCsEmail","password","setPassword","phoneNumber","setPhoneNumber","csPhoneNumber","setCsPhoneNumber","address","setAddress","submitted","setSubmitted","rememberChecked","setRememberChecked","validatePassword","passwordValidation","validateEmail","emailValidation","nameValidation","checkBoxClicked","e","isChecked","target","checked","handleSubmit","event","preventDefault","seller","login","setTimeout","clear","fontSize","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Form, Alert, Col } from \"react-bootstrap\";\nimport \"./SellerRegister.css\";\nimport Logo from '../../images/capcricon.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sellerActions, alertActions } from '../../redux/actions';\nimport { formValidation as validate } from '../../services';\n\nexport default function SellerRegister() {\n\n\n    //redux integration\n    const loggingIn = useSelector(state => state.sellerAuth.loading);\n    const user = useSelector(state => state.userAuth.user);\n    const message = useSelector(state => state.alert.message);\n    const alertType = useSelector(state => state.alert.type);\n    const dispatch = useDispatch();\n\n\n    //state of this page\n    const [sellerName, setSellerName] = useState(user ? user.userName : \"\");\n    const [companyName, setCompanyName] = useState(user ? validate.checkForCompanyName(user.emailId) : \"\");\n    const [companyEmail, setCompanyEmail] = useState(user ? user.emailId : \"\");\n    const [csEmail, setCsEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(user ? user.phoneNumber : \"\");\n    const [csPhoneNumber, setCsPhoneNumber] = useState(\"\");\n    const [address, setAddress] = useState(user ? user.address : \"\");\n    const [submitted, setSubmitted] = useState(false);\n    const [rememberChecked, setRememberChecked] = useState(false);\n\n\n\n\n    //FORM VALIDATION:\n\n    // if form is valid on submit, this function return true, else false\n    function validatePassword() {\n        return validate.passwordValidation(submitted, password);\n    }\n\n    function validateEmail() {\n        return validate.emailValidation(submitted, companyEmail);\n    }\n\n    function nameValidation() {\n        return validate.nameValidation(submitted, sellerName);\n    }\n\n\n    //check if remember checkbox is clicked\n    const checkBoxClicked = (e) => {\n        let isChecked = e.target.checked;\n        setRememberChecked(isChecked);\n    }\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSubmitted(true);\n\n        //dispatch only if input fields have value and also password is 8 charachters min\n        if (companyEmail && password && validatePassword()) {\n            const seller = { \"emailId\": companyEmail, \"password\": password };\n            dispatch(sellerActions.login(seller, rememberChecked));\n        }\n    }\n\n    //clear the alert\n    useEffect(() => {\n        setTimeout(\n            function () {\n                // clear alert after 3 secomds\n                dispatch(alertActions.clear());\n            }, 3000);\n\n    }, [alertType, dispatch]);\n\n    return (\n        <>\n            {message && (\n                <Alert variant={(alertType === \"alert-success\") ? \"success\" : \"danger\"} >\n                    {message}\n                </Alert>\n            )}\n            <div className=\"d-flex justify-content-center mt-5\">\n                <a href=\"/\"><img\n                    src={Logo}\n                    width=\"200\"\n                    height=\"120\"\n                    className=\"image\"\n                    alt=\"capricon logo\"\n                /></a>\n            </div>\n            <p className=\"font-weight-bold text-center mt-4 mb-0\" style={{ fontSize: 32 }}>Register</p>\n            <div className=\"Login\">\n                <p className=\"text-center text-muted text-monospace mb-5\" style={{ fontSize: 22 }}>Become a Seller</p>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} size=\"lg\" controlId=\"email\">\n                            <Form.Label>Seller Name</Form.Label>\n                            <Form.Control\n                                autoFocus\n                                type=\"text\"\n                                value={sellerName}\n                                placeholder=\"Your name\"\n                                className={'form-control' + (!nameValidation() && ' is-invalid')}\n                                onChange={(e) => setSellerName(e.target.value)}\n                            />\n                            {!nameValidation() &&\n                                <div className=\"invalid-feedback\">Email is required</div>\n                            }\n\n                        </Form.Group>\n                        <Form.Group as={Col} size=\"lg\" controlId=\"email\">\n                            <Form.Label>Company Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                value={companyEmail}\n                                placeholder=\"mail@company.com\"\n                                className={'form-control' + (!validateEmail() && ' is-invalid')}\n                                onChange={(e) => setCompanyEmail(e.target.value)}\n                            />\n                            {!validateEmail() &&\n                                <div className=\"invalid-feedback\">Email is required</div>\n                            }\n\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Group size=\"lg\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={password}\n                            placeholder=\"enter password\"\n                            className={'form-control' + (!validatePassword() && ' is-invalid')}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        {!validatePassword() &&\n                            <div className=\"invalid-feedback\">password minimum 8 characters</div>\n                        }\n\n                    </Form.Group>\n                    <div className=\"d-flex justify-content-between align-items-center flex-row\">\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check onChange={e => checkBoxClicked(e)} type=\"checkbox\" label=\"Remember me\" checked={rememberChecked} />\n                        </Form.Group>\n                        <Button variant=\"link\" className=\"pb-4 m-0\" >Forgot password?</Button>\n                    </div>\n                    <Button block size=\"lg\" type=\"submit\">\n                        {loggingIn && <span className=\"spinner-grow spinner-grow-sm mr-1\"></span>}\n                        Register as a Seller\n                    </Button>\n                </Form>\n                <p className=\"font-weight-normal mt-5 mb-2\" style={{ fontSize: 22 }}>Already a seller at capricon?</p>\n                <Button href=\"/seller/login\" block size=\"lg\" variant=\"outline-dark\">\n                    Login as a Seller\n                </Button>\n            </div>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}