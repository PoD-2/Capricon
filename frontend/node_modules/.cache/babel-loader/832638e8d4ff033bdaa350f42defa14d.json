{"ast":null,"code":"import { userAuthConstants } from '../constants';\nimport { userAuthService } from '../../services';\nimport { alertActions } from '.';\nexport const userAuthActions = {\n  login,\n  logout,\n  register\n};\n\nfunction login(user, remember, history) {\n  return dispatch => {\n    dispatch(request());\n    userAuthService.login(user, remember).then(user => {\n      dispatch(success(user));\n      history.push('/');\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userAuthConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userAuthConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userAuthConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userAuthService.logout();\n  return {\n    type: userAuthConstants.LOGOUT\n  };\n}\n\nfunction register(user, remember, history) {\n  return dispatch => {\n    dispatch(request());\n    userAuthService.register(user, remember).then(user => {\n      dispatch(success(user));\n      history.push('/');\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userAuthConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userAuthConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userAuthConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/frontend/src/redux/actions/user.auth.actions.js"],"names":["userAuthConstants","userAuthService","alertActions","userAuthActions","login","logout","register","user","remember","history","dispatch","request","then","success","push","error","failure","toString","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,YAAT,QAA6B,GAA7B;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC3BC,EAAAA,KAD2B;AAE3BC,EAAAA,MAF2B;AAG3BC,EAAAA;AAH2B,CAAxB;;AAMP,SAASF,KAAT,CAAeG,IAAf,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AACpC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAV,IAAAA,eAAe,CAACG,KAAhB,CAAsBG,IAAtB,EAA4BC,QAA5B,EACKI,IADL,CAEQL,IAAI,IAAI;AACAG,MAAAA,QAAQ,CAACG,OAAO,CAACN,IAAD,CAAR,CAAR;AACAE,MAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AAEP,KANT,EAOQC,KAAK,IAAI;AACLL,MAAAA,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACAP,MAAAA,QAAQ,CAACR,YAAY,CAACa,KAAb,CAAmBA,KAAK,CAACE,QAAN,EAAnB,CAAD,CAAR;AACH,KAVT;AAYH,GAfD;;AAiBA,WAASN,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAEW,MAAAA,IAAI,EAAElB,iBAAiB,CAACmB,aAA1B;AAAyCZ,MAAAA;AAAzC,KAAP;AAAwD;;AACjF,WAASM,OAAT,CAAiBN,IAAjB,EAAuB;AAAE,WAAO;AAAEW,MAAAA,IAAI,EAAElB,iBAAiB,CAACoB,aAA1B;AAAyCb,MAAAA;AAAzC,KAAP;AAAwD;;AACjF,WAASS,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAElB,iBAAiB,CAACqB,aAA1B;AAAyCN,MAAAA;AAAzC,KAAP;AAAyD;AACtF;;AAED,SAASV,MAAT,GAAkB;AACdJ,EAAAA,eAAe,CAACI,MAAhB;AACA,SAAO;AAAEa,IAAAA,IAAI,EAAElB,iBAAiB,CAACsB;AAA1B,GAAP;AACH;;AAED,SAAShB,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,OAAlC,EAA2C;AACvC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAV,IAAAA,eAAe,CAACK,QAAhB,CAAyBC,IAAzB,EAA8BC,QAA9B,EACKI,IADL,CAEQL,IAAI,IAAI;AACJG,MAAAA,QAAQ,CAACG,OAAO,CAACN,IAAD,CAAR,CAAR;AACAE,MAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AAEH,KANT,EAOQC,KAAK,IAAI;AACLL,MAAAA,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACAP,MAAAA,QAAQ,CAACR,YAAY,CAACa,KAAb,CAAmBA,KAAK,CAACE,QAAN,EAAnB,CAAD,CAAR;AACH,KAVT;AAYH,GAfD;;AAiBA,WAASN,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAEW,MAAAA,IAAI,EAAElB,iBAAiB,CAACuB,gBAA1B;AAA4ChB,MAAAA;AAA5C,KAAP;AAA2D;;AACpF,WAASM,OAAT,CAAiBN,IAAjB,EAAuB;AAAE,WAAO;AAAEW,MAAAA,IAAI,EAAElB,iBAAiB,CAACwB,gBAA1B;AAA4CjB,MAAAA;AAA5C,KAAP;AAA2D;;AACpF,WAASS,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAElB,iBAAiB,CAACyB,gBAA1B;AAA4CV,MAAAA;AAA5C,KAAP;AAA4D;AACzF","sourcesContent":["import { userAuthConstants } from '../constants';\nimport { userAuthService } from '../../services';\nimport { alertActions } from '.';\n\nexport const userAuthActions = {\n    login,\n    logout,\n    register\n};\n\nfunction login(user, remember, history) {\n    return dispatch => {\n        dispatch(request()); \n\n        userAuthService.login(user, remember)\n            .then(\n                user => { \n                        dispatch(success(user));\n                        history.push('/');\n                   \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userAuthConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userAuthConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userAuthConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userAuthService.logout();\n    return { type: userAuthConstants.LOGOUT };\n}\n\nfunction register(user, remember, history) {\n    return dispatch => {\n        dispatch(request());\n\n        userAuthService.register(user,remember)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userAuthConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userAuthConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userAuthConstants.REGISTER_FAILURE, error } }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}