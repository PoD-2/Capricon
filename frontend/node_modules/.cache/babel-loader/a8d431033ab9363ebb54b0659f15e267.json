{"ast":null,"code":"var _jsxFileName = \"/Users/santhosh/myFiles/Capricon/src/pages/Register/RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Container, Row, Col, Alert, Carousel } from \"react-bootstrap\";\nimport RegisterPic from '../../images/buyingOnline.gif';\nimport verifiedPic from '../../images/verified-pic.png';\nimport trackingPic from '../../images/liveTracking.png';\nimport './Register.css';\nimport Logo from '../../images/capcricon.png';\nimport { formValidation as validate } from '../../services';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterPage() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [mobileNumber, setMobileNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [rememberChecked, setRememberChecked] = useState(false);\n  const [carouselIndex, setCarouselIndex] = useState(0);\n\n  const handleCarouselIndex = (selectedIndex, e) => {\n    setCarouselIndex(selectedIndex);\n  };\n\n  const headLines = [\"Buy and sell products online\", \"All products are genuine and verified\", \"Live tracking of shipment\"]; //redux integration\n\n  const loggingIn = useSelector(state => state.authentication.loading);\n  const message = useSelector(state => state.alert.message);\n  const alertType = useSelector(state => state.alert.type);\n  const dispatch = useDispatch(); //FORM VALIDATION:\n  // if form is valid on submit, this function return true, else false\n\n  function validateName() {\n    return validate.nameValidation(submitted, name);\n  }\n\n  function validateMobileNumber() {\n    return validate.mobileNumberValidation(submitted, mobileNumber);\n  }\n\n  function validatePassword() {\n    return validate.passwordValidation(submitted, password);\n  }\n\n  function validateEmail() {\n    return validate.emailValidation(submitted, email);\n  } //check if remember checkbox is clicked\n\n\n  const checkBoxClicked = e => {\n    let isChecked = e.target.checked;\n    setRememberChecked(isChecked);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true);\n\n    if (name && mobileNumber && email && password && validatePassword() && validateMobileNumber()) {\n      const user = {\n        \"name\": name,\n        \"mobileNumber\": mobileNumber,\n        \"email\": email,\n        \"password\": password\n      };\n      dispatch(userActions.register(user, rememberChecked));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"min-vh-100\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        className: \"d-lg-block d-none px-0\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          interval: 4000,\n          activeIndex: carouselIndex,\n          onSelect: handleCarouselIndex,\n          children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n            className: \"w-100 vh-100 d-flex justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block \",\n              src: RegisterPic,\n              alt: \"First slide\",\n              width: \"80%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-100 vh-100\",\n              src: verifiedPic,\n              alt: \"Second slide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-100 vh-100\",\n              src: trackingPic,\n              alt: \"Third slide\",\n              width: \"80%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"embedShado d-flex align-items-center justify-content-center flex-column\",\n        style: {\n          backgroundColor: \"white\"\n        },\n        children: [message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: alertType === \"alert-success\" ? \"success\" : \"danger\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Logo,\n            width: \"200\",\n            height: \"120\",\n            className: \"image\",\n            alt: \"capricon logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"registerForm\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-weight-bold mt-4 mb-0\",\n            style: {\n              fontSize: 32\n            },\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-weight-light mb-4 text-monospace text-muted\",\n            style: {\n              fontSize: 16,\n              width: 380\n            },\n            children: headLines[carouselIndex] + \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"text\",\n              value: name,\n              placeholder: \"Enter your name\",\n              className: 'form-control' + (!validateName() && ' is-invalid'),\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), !validateName() && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Name is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"tel\",\n              value: mobileNumber,\n              placeholder: \"Enter your mobile number\",\n              className: 'form-control' + (!validateMobileNumber() && ' is-invalid'),\n              onChange: e => setMobileNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), !validateMobileNumber() && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Invalid mobile number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              placeholder: \"Enter your email address\",\n              className: 'form-control' + (!validateEmail() && ' is-invalid'),\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), !validateEmail() && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Invalid email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              placeholder: \"Enter password\",\n              className: 'form-control' + (!validatePassword() && ' is-invalid'),\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), validatePassword() ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Password must be minimum 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Password must be minimum 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicCheckbox\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              onChange: e => checkBoxClicked(e),\n              type: \"checkbox\",\n              label: \"Remember me\",\n              checked: rememberChecked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            size: \"lg\",\n            type: \"submit\",\n            children: [loggingIn && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-grow spinner-grow-sm mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 43\n            }, this), \"Sign Up\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-weight-normal mt-5 mb-2\",\n            style: {\n              fontSize: 18\n            },\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            href: \"/login\",\n            block: true,\n            size: \"lg\",\n            variant: \"outline-dark\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterPage, \"9UCqxrbldmLepLFJ4SJIHRlHPWY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/pages/Register/RegisterPage.js"],"names":["React","useState","Button","Form","Container","Row","Col","Alert","Carousel","RegisterPic","verifiedPic","trackingPic","Logo","formValidation","validate","useDispatch","useSelector","userActions","RegisterPage","name","setName","mobileNumber","setMobileNumber","email","setEmail","password","setPassword","submitted","setSubmitted","rememberChecked","setRememberChecked","carouselIndex","setCarouselIndex","handleCarouselIndex","selectedIndex","e","headLines","loggingIn","state","authentication","loading","message","alert","alertType","type","dispatch","validateName","nameValidation","validateMobileNumber","mobileNumberValidation","validatePassword","passwordValidation","validateEmail","emailValidation","checkBoxClicked","isChecked","target","checked","handleSubmit","event","preventDefault","user","register","backgroundColor","fontSize","width","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Container, Row, Col, Alert, Carousel } from \"react-bootstrap\";\nimport RegisterPic from '../../images/buyingOnline.gif';\nimport verifiedPic from '../../images/verified-pic.png';\nimport trackingPic from '../../images/liveTracking.png';\nimport './Register.css'\nimport Logo from '../../images/capcricon.png';\nimport { formValidation as validate } from '../../services';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../../redux/actions';\nfunction RegisterPage() {\n\n    const [name, setName] = useState(\"\");\n    const [mobileNumber, setMobileNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [submitted, setSubmitted] = useState(false);\n    const [rememberChecked, setRememberChecked] = useState(false);\n    const [carouselIndex, setCarouselIndex] = useState(0);\n\n    const handleCarouselIndex = (selectedIndex, e) => {\n        setCarouselIndex(selectedIndex);\n    };\n\n    const headLines = [\"Buy and sell products online\", \"All products are genuine and verified\", \"Live tracking of shipment\"];\n\n\n    //redux integration\n    const loggingIn = useSelector(state => state.authentication.loading);\n    const message = useSelector(state => state.alert.message);\n    const alertType = useSelector(state => state.alert.type);\n    const dispatch = useDispatch();\n\n\n    //FORM VALIDATION:\n\n    // if form is valid on submit, this function return true, else false\n\n    function validateName() {\n        return validate.nameValidation(submitted, name);\n    }\n\n    function validateMobileNumber() {\n        return validate.mobileNumberValidation(submitted, mobileNumber);\n    }\n\n    function validatePassword() {\n        return validate.passwordValidation(submitted, password);\n    }\n\n    function validateEmail() {\n        return validate.emailValidation(submitted, email);\n    }\n\n\n    //check if remember checkbox is clicked\n    const checkBoxClicked = (e) => {\n        let isChecked = e.target.checked;\n        setRememberChecked(isChecked);\n    }\n\n\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSubmitted(true);\n        if (name && mobileNumber && email && password && validatePassword() && validateMobileNumber()) {\n\n            const user = { \"name\": name, \"mobileNumber\": mobileNumber, \"email\": email, \"password\": password };\n            dispatch(userActions.register(user, rememberChecked));\n        }\n    }\n\n    return (\n        <Container fluid>\n            <Row className=\"min-vh-100\">\n                <Col lg={6} className=\"d-lg-block d-none px-0\">\n                    <Carousel interval={4000} activeIndex={carouselIndex} onSelect={handleCarouselIndex}>\n                        <Carousel.Item className=\"w-100 vh-100 d-flex justify-content-center align-items-center\">\n                            <img\n                                className=\"d-block \"\n                                src={RegisterPic}\n                                alt=\"First slide\"\n                                width=\"80%\"\n                                \n                            />\n                        </Carousel.Item>\n                        <Carousel.Item >\n                            <img\n                                className=\"w-100 vh-100\"\n                                src={verifiedPic}\n                                alt=\"Second slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"w-100 vh-100\"\n                                src={trackingPic}\n                                alt=\"Third slide\"\n                                width=\"80%\"\n                            />\n                        </Carousel.Item>\n                    </Carousel>\n                </Col>\n                <Col className=\"embedShado d-flex align-items-center justify-content-center flex-column\" style={{ backgroundColor: \"white\" }}>\n                    {message && (\n                        <Alert variant={(alertType === \"alert-success\") ? \"success\" : \"danger\"} >\n                            {message}\n                        </Alert>\n                    )}\n                    <a href=\"/\"><img\n                        src={Logo}\n                        width=\"200\"\n                        height=\"120\"\n                        className=\"image\"\n                        alt=\"capricon logo\"\n                    /></a>\n\n                    <Form className=\"registerForm\" onSubmit={handleSubmit}>\n                        <p className=\"font-weight-bold mt-4 mb-0\" style={{ fontSize: 32 }}>Create Account</p>\n                        <p className=\"font-weight-light mb-4 text-monospace text-muted\" style={{ fontSize: 16, width: 380 }}>{headLines[carouselIndex] + \".\"}</p>\n                        <Form.Group size=\"lg\" controlId=\"email\">\n                            <Form.Control\n                                autoFocus\n                                type=\"text\"\n                                value={name}\n                                placeholder=\"Enter your name\"\n                                className={'form-control' + (!validateName() && ' is-invalid')}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                            {!validateName() &&\n                                <div className=\"invalid-feedback\">Name is required</div>\n                            }\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"email\">\n                            <Form.Control\n                                type=\"tel\"\n                                value={mobileNumber}\n                                placeholder=\"Enter your mobile number\"\n                                className={'form-control' + (!validateMobileNumber() && ' is-invalid')}\n                                onChange={(e) => setMobileNumber(e.target.value)}\n                            />\n                            {!validateMobileNumber() &&\n                                <div className=\"invalid-feedback\">Invalid mobile number</div>\n                            }\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"email\">\n                            <Form.Control\n                                type=\"email\"\n                                value={email}\n                                placeholder=\"Enter your email address\"\n                                className={'form-control' + (!validateEmail() && ' is-invalid')}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                            {!validateEmail() &&\n                                <div className=\"invalid-feedback\">Invalid email</div>\n                            }\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"password\">\n                            <Form.Control\n                                type=\"password\"\n                                value={password}\n                                placeholder=\"Enter password\"\n                                className={'form-control' + (!validatePassword() && ' is-invalid')}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                            {validatePassword() ? (\n                                <Form.Text className=\"text-muted\">\n                                    Password must be minimum 8 characters\n                                </Form.Text>\n                            ) : (\n                                <div className=\"invalid-feedback\">Password must be minimum 8 characters</div>\n                            )\n                            }\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check onChange={e => checkBoxClicked(e)} type=\"checkbox\" label=\"Remember me\" checked={rememberChecked} />\n                        </Form.Group>\n                        <Button block size=\"lg\" type=\"submit\">\n                            {loggingIn && <span className=\"spinner-grow spinner-grow-sm mr-1\"></span>}\n                           Sign Up\n                        </Button>\n                        <p className=\"font-weight-normal mt-5 mb-2\" style={{ fontSize: 18 }}>Already have an account?</p>\n                        <Button href=\"/login\" block size=\"lg\" variant=\"outline-dark\">\n                            Login\n      </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default RegisterPage\n"]},"metadata":{},"sourceType":"module"}