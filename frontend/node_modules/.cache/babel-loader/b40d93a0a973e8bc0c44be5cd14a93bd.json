{"ast":null,"code":"import { alertActions } from '.';\nimport { userOrderService } from '../../services';\nimport { userOrderConstants } from '../constants';\nexport const userOrderActions = {\n  viewOrderHistory,\n  viewOrderStatus\n};\n\nfunction viewOrderHistory(userId) {\n  return dispatch => {\n    dispatch(request());\n    return userOrderService.viewOrderHistory(userId).then(orderPrevious => {\n      dispatch(success(orderPrevious));\n    }, error => {\n      dispatch(failure());\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userOrderConstants.VIEW_PREVIOUS_REQUEST\n    };\n  }\n\n  function success(orderPrevious) {\n    return {\n      type: userOrderConstants.VIEW_PREVIOUS_SUCCESS,\n      orderPrevious\n    };\n  }\n\n  function failure() {\n    return {\n      type: userOrderConstants.VIEW_PREVIOUS_FAILURE\n    };\n  }\n}\n\nfunction viewOrderStatus(userId) {\n  return dispatch => {\n    dispatch(request());\n    return userOrderService.viewOrderStatus(userId).then(orders => {\n      dispatch(success(orders));\n    }, error => {\n      dispatch(failure());\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userOrderConstants.VIEW_REQUEST\n    };\n  }\n\n  function success(orders) {\n    return {\n      type: userOrderConstants.VIEW_SUCCESS,\n      orders\n    };\n  }\n\n  function failure() {\n    return {\n      type: userOrderConstants.VIEW_FAILURE\n    };\n  }\n}","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/frontend/src/redux/actions/user.order.actions.js"],"names":["alertActions","userOrderService","userOrderConstants","userOrderActions","viewOrderHistory","viewOrderStatus","userId","dispatch","request","then","orderPrevious","success","error","failure","toString","type","VIEW_PREVIOUS_REQUEST","VIEW_PREVIOUS_SUCCESS","VIEW_PREVIOUS_FAILURE","orders","VIEW_REQUEST","VIEW_SUCCESS","VIEW_FAILURE"],"mappings":"AAAA,SAASA,YAAT,QAA6B,GAA7B;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC5BC,EAAAA,gBAD4B;AAE5BC,EAAAA;AAF4B,CAAzB;;AAMP,SAASD,gBAAT,CAA0BE,MAA1B,EAAkC;AAC9B,SAAOC,QAAQ,IAAI;AAEfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEA,WAAOP,gBAAgB,CAACG,gBAAjB,CAAkCE,MAAlC,EACFG,IADE,CAECC,aAAa,IAAG;AACZH,MAAAA,QAAQ,CAACI,OAAO,CAACD,aAAD,CAAR,CAAR;AACH,KAJF,EAKCE,KAAK,IAAI;AACLL,MAAAA,QAAQ,CAACM,OAAO,EAAR,CAAR;AACAN,MAAAA,QAAQ,CAACP,YAAY,CAACY,KAAb,CAAmBA,KAAK,CAACE,QAAN,EAAnB,CAAD,CAAR;AACH,KARF,CAAP;AAUH,GAdD;;AAgBA,WAASN,OAAT,GAAmB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAEb,kBAAkB,CAACc;AAA3B,KAAP;AAA2D;;AAChF,WAASL,OAAT,CAAiBD,aAAjB,EAAgC;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEb,kBAAkB,CAACe,qBAA3B;AAAkDP,MAAAA;AAAlD,KAAP;AAA0E;;AAC5G,WAASG,OAAT,GAAmB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAEb,kBAAkB,CAACgB;AAA3B,KAAP;AAA2D;AACnF;;AAED,SAASb,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,SAAOC,QAAQ,IAAI;AAEfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEA,WAAOP,gBAAgB,CAACI,eAAjB,CAAiCC,MAAjC,EACFG,IADE,CAECU,MAAM,IAAI;AACNZ,MAAAA,QAAQ,CAACI,OAAO,CAACQ,MAAD,CAAR,CAAR;AACH,KAJF,EAKCP,KAAK,IAAI;AACLL,MAAAA,QAAQ,CAACM,OAAO,EAAR,CAAR;AACAN,MAAAA,QAAQ,CAACP,YAAY,CAACY,KAAb,CAAmBA,KAAK,CAACE,QAAN,EAAnB,CAAD,CAAR;AACH,KARF,CAAP;AAUH,GAdD;;AAgBA,WAASN,OAAT,GAAmB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAEb,kBAAkB,CAACkB;AAA3B,KAAP;AAAkD;;AACvE,WAAST,OAAT,CAAiBQ,MAAjB,EAAyB;AAAE,WAAO;AAAEJ,MAAAA,IAAI,EAAEb,kBAAkB,CAACmB,YAA3B;AAAyCF,MAAAA;AAAzC,KAAP;AAA0D;;AACrF,WAASN,OAAT,GAAmB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAEb,kBAAkB,CAACoB;AAA3B,KAAP;AAAkD;AAC1E","sourcesContent":["import { alertActions } from '.';\nimport { userOrderService } from '../../services';\nimport { userOrderConstants } from '../constants';\n\nexport const userOrderActions = {\n    viewOrderHistory,\n    viewOrderStatus\n}\n\n\nfunction viewOrderHistory(userId) {\n    return dispatch => {\n\n        dispatch(request());\n\n        return userOrderService.viewOrderHistory(userId)\n            .then(\n                orderPrevious=> {\n                    dispatch(success(orderPrevious));\n                },\n                error => {\n                    dispatch(failure());\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: userOrderConstants.VIEW_PREVIOUS_REQUEST } }\n    function success(orderPrevious) { return { type: userOrderConstants.VIEW_PREVIOUS_SUCCESS, orderPrevious } }\n    function failure() { return { type: userOrderConstants.VIEW_PREVIOUS_FAILURE } }\n}\n\nfunction viewOrderStatus(userId) {\n    return dispatch => {\n\n        dispatch(request());\n\n        return userOrderService.viewOrderStatus(userId)\n            .then(\n                orders => {\n                    dispatch(success(orders));\n                },\n                error => {\n                    dispatch(failure());\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: userOrderConstants.VIEW_REQUEST } }\n    function success(orders) { return { type: userOrderConstants.VIEW_SUCCESS, orders } }\n    function failure() { return { type: userOrderConstants.VIEW_FAILURE } }\n}"]},"metadata":{},"sourceType":"module"}