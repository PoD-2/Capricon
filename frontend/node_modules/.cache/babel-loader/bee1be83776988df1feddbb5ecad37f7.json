{"ast":null,"code":"import { sellerProductConstants } from '../constants';\nimport { alertActions } from '.';\nimport { sellerProductService } from '../../services';\nexport const sellerProductActions = {\n  add,\n  view,\n  changeQuantity\n};\n\nfunction add(data, sellerId, setProgress) {\n  return dispatch => {\n    dispatch(request());\n    return sellerProductService.add(data, sellerId, setProgress).then(res => {\n      dispatch(success(res.products));\n      dispatch(alertActions.success(\"product added successfully\"));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: sellerProductConstants.ADD_REQUEST\n    };\n  }\n\n  function success(products) {\n    return {\n      type: sellerProductConstants.ADD_SUCCESS,\n      products\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: sellerProductConstants.ADD_FAILURE,\n      error\n    };\n  }\n}\n\nfunction view(sellerId) {\n  return dispatch => {\n    dispatch(request());\n    sellerProductService.view(sellerId).then(products => {\n      dispatch(success(products));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.message.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: sellerProductConstants.VIEW_REQUEST\n    };\n  }\n\n  function success(products) {\n    return {\n      type: sellerProductConstants.VIEW_SUCCESS,\n      products\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: sellerProductConstants.VIEW_FAILURE,\n      error\n    };\n  }\n}\n\nfunction changeQuantity(productId, changeQty, sellerId) {\n  return dispatch => {\n    dispatch(request());\n    sellerProductService.changeQuantity(productId, changeQty, sellerId).then(products => {\n      dispatch(success(products));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.message.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: sellerProductConstants.CHANGE_REQUEST\n    };\n  }\n\n  function success(products) {\n    return {\n      type: sellerProductConstants.CHANGE_SUCCESS,\n      products\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: sellerProductConstants.CHANGE_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/redux/actions/seller.product.actions.js"],"names":["sellerProductConstants","alertActions","sellerProductService","sellerProductActions","add","view","changeQuantity","data","sellerId","setProgress","dispatch","request","then","res","success","products","error","failure","toString","type","ADD_REQUEST","ADD_SUCCESS","ADD_FAILURE","message","VIEW_REQUEST","VIEW_SUCCESS","VIEW_FAILURE","productId","changeQty","CHANGE_REQUEST","CHANGE_SUCCESS","CHANGE_FAILURE"],"mappings":"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","sourcesContent":["import { sellerProductConstants } from '../constants';\nimport { alertActions } from '.';\nimport { sellerProductService } from '../../services';\n\nexport const sellerProductActions = {\n    add,\n    view,\n    changeQuantity\n};\n\nfunction add(data, sellerId, setProgress) {\n    return dispatch => {\n\n        dispatch(request());\n\n        return sellerProductService.add(data, sellerId, setProgress)\n            .then(\n                res => {\n                    dispatch(success(res.products));\n                    dispatch(alertActions.success(\"product added successfully\"));\n\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: sellerProductConstants.ADD_REQUEST } }\n    function success(products) { return { type: sellerProductConstants.ADD_SUCCESS, products } }\n    function failure(error) { return { type: sellerProductConstants.ADD_FAILURE, error } }\n}\n\nfunction view(sellerId) {\n    return dispatch => {\n\n        dispatch(request());\n\n        sellerProductService.view(sellerId)\n            .then(\n                products => {\n                    dispatch(success(products));\n                },\n                error => {\n\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.message.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: sellerProductConstants.VIEW_REQUEST } }\n    function success(products) { return { type: sellerProductConstants.VIEW_SUCCESS, products } }\n    function failure(error) { return { type: sellerProductConstants.VIEW_FAILURE, error } }\n}\n\n\nfunction changeQuantity(productId, changeQty, sellerId) {\n    return dispatch => {\n\n        dispatch(request());\n\n        sellerProductService.changeQuantity(productId, changeQty, sellerId)\n            .then(\n                products => {\n                    dispatch(success(products));\n                },\n                error => {\n\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.message.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: sellerProductConstants.CHANGE_REQUEST } }\n    function success(products) { return { type: sellerProductConstants.CHANGE_SUCCESS, products } }\n    function failure(error) { return { type: sellerProductConstants.CHANGE_FAILURE, error } }\n}"]},"metadata":{},"sourceType":"module"}