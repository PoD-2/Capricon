{"ast":null,"code":"var _jsxFileName = \"/Users/santhosh/myFiles/Capricon/src/components/ProductUpload/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Col, Button, Modal, Form, ProgressBar } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductUpload(props) {\n  _s();\n\n  const [productName, setProductName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [quantity, setQuanity] = useState(\"\");\n  const [productImages, setProductImages] = useState([]);\n\n  const hideModal = () => {\n    props.closeModal();\n  };\n\n  const handleProductSubmit = () => {};\n\n  const imageFileHandler = e => {\n    // setProductImages(e.target.files);\n    console.log(window.URL.createObjectURL(e.target.files));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.showModal,\n    onHide: hideModal,\n    size: \"lg\",\n    backdrop: \"static\" // dialogClassName=\"custom-modal\"\n    ,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        className: \"mb-3\",\n        striped: true,\n        variant: \"success\",\n        now: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleProductSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 6,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"text\",\n              value: productName,\n              placeholder: \"Product full name\" // className={'form-control' + (!sellerNameValidation() && ' is-invalid')}\n              ,\n              onChange: e => setProductName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 6,\n            controlId: \"formGridCompanyName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: category,\n              placeholder: \"Product category like gadgets, cosmetics etc\" // className={'form-control' + (!companyNameValidation() && ' is-invalid')}\n              ,\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 12,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Product description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: description,\n              placeholder: \"About this product\" // className={'form-control' + (!sellerNameValidation() && ' is-invalid')}\n              ,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: price,\n              placeholder: \"Product price in INR\" // className={'form-control' + (!sellerNameValidation() && ' is-invalid')}\n              ,\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"formGridCompanyName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: quantity,\n              placeholder: \"No of products you currently have\" // className={'form-control' + (!companyNameValidation() && ' is-invalid')}\n              ,\n              onChange: e => setQuanity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Product Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: color,\n              placeholder: \"eg black, blue etc\" // className={'form-control' + (!sellerNameValidation() && ' is-invalid')}\n              ,\n              onChange: e => setColor(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: imageFileHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Product images: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex rounded align-items-center justify-content-center\",\n        style: {\n          backgroundColor: \"rgba(112, 112, 112, 0.1)\",\n          height: 200\n        },\n        children: \"Select files to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: hideModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"Add product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductUpload, \"/Fes8R6TgkwREjcGA6x5WlWqaJs=\");\n\n_c = ProductUpload;\nexport default ProductUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductUpload\");","map":{"version":3,"sources":["/Users/santhosh/myFiles/Capricon/src/components/ProductUpload/index.js"],"names":["React","useState","Col","Button","Modal","Form","ProgressBar","ProductUpload","props","productName","setProductName","category","setCategory","color","setColor","description","setDescription","price","setPrice","quantity","setQuanity","productImages","setProductImages","hideModal","closeModal","handleProductSubmit","imageFileHandler","e","console","log","window","URL","createObjectURL","target","files","showModal","value","backgroundColor","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Col, Button, Modal, Form, ProgressBar } from 'react-bootstrap';\n\nfunction ProductUpload(props) {\n\n    const [productName, setProductName] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [color, setColor] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [quantity, setQuanity] = useState(\"\");\n    const [productImages, setProductImages] = useState([]);\n\n\n\n    const hideModal = () => {\n        props.closeModal();\n    }\n\n    const handleProductSubmit = () => {\n\n    }\n\n    const imageFileHandler = (e) => {\n        // setProductImages(e.target.files);\n        console.log(window.URL.createObjectURL(e.target.files));\n    }\n    \n    \n\n\n    return (\n        <Modal\n        show={props.showModal}\n        onHide={hideModal}\n        size=\"lg\"\n        backdrop=\"static\"\n    // dialogClassName=\"custom-modal\"\n    >\n        <Modal.Header closeButton>\n            <Modal.Title>Add product</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <ProgressBar className=\"mb-3\" striped variant=\"success\" now={40} />\n            <Form onSubmit={handleProductSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} md={6} controlId=\"formGridName\">\n                        <Form.Label>Product Name</Form.Label>\n                        <Form.Control\n                            autoFocus\n                            type=\"text\"\n                            value={productName}\n                            placeholder=\"Product full name\"\n                            // className={'form-control' + (!sellerNameValidation() && ' is-invalid')}\n                            onChange={(e) => setProductName(e.target.value)}\n                        />\n                        {/* {!sellerNameValidation() &&\n                            <div className=\"invalid-feedback\">Name is required</div>\n                        } */}\n\n                    </Form.Group>\n                    <Form.Group as={Col} md={6} controlId=\"formGridCompanyName\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            value={category}\n                            placeholder=\"Product category like gadgets, cosmetics etc\"\n                            // className={'form-control' + (!companyNameValidation() && ' is-invalid')}\n                            onChange={(e) => setCategory(e.target.value)}\n                        />\n                        {/* {!companyNameValidation() &&\n                            <div className=\"invalid-feedback\">Company Name is required</div>\n                        } */}\n\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} md={12} controlId=\"formGridName\">\n                        <Form.Label>Product description</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            value={description}\n                            placeholder=\"About this product\"\n                            // className={'form-control' + (!sellerNameValidation() && ' is-invalid')}\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                        {/* {!sellerNameValidation() &&\n                            <div className=\"invalid-feedback\">Name is required</div>\n                        } */}\n\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} md={4} controlId=\"formGridName\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            value={price}\n                            placeholder=\"Product price in INR\"\n                            // className={'form-control' + (!sellerNameValidation() && ' is-invalid')}\n                            onChange={(e) => setPrice(e.target.value)}\n                        />\n                        {/* {!sellerNameValidation() &&\n                            <div className=\"invalid-feedback\">Name is required</div>\n                        } */}\n\n                    </Form.Group>\n                    <Form.Group as={Col} md={4} controlId=\"formGridCompanyName\">\n                        <Form.Label>quantity</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            value={quantity}\n                            placeholder=\"No of products you currently have\"\n                            // className={'form-control' + (!companyNameValidation() && ' is-invalid')}\n                            onChange={(e) => setQuanity(e.target.value)}\n                        />\n                        {/* {!companyNameValidation() &&\n                            <div className=\"invalid-feedback\">Company Name is required</div>\n                        } */}\n\n                    </Form.Group>\n                    <Form.Group as={Col} md={4} controlId=\"formGridName\">\n                        <Form.Label>Product Color</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            value={color}\n                            placeholder=\"eg black, blue etc\"\n                            // className={'form-control' + (!sellerNameValidation() && ' is-invalid')}\n                            onChange={(e) => setColor(e.target.value)}\n                        />\n                        {/* {!sellerNameValidation() &&\n                            <div className=\"invalid-feedback\">Name is required</div>\n                        } */}\n\n                    </Form.Group>\n                </Form.Row>\n\n            </Form>\n            <input type=\"file\" multiple onChange={imageFileHandler} />\n            <Form.Label>Product images: </Form.Label>\n            <div className=\"d-flex rounded align-items-center justify-content-center\" style={{backgroundColor: \"rgba(112, 112, 112, 0.1)\", height: 200}}>\n             Select files to upload\n            </div>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={hideModal}>Close</Button>\n            <Button variant=\"primary\">Add product</Button>\n        </Modal.Footer>\n    </Modal>\n    )\n}\n\nexport default ProductUpload\n"]},"metadata":{},"sourceType":"module"}